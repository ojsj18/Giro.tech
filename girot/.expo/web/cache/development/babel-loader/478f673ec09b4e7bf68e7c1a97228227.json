{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/ovidio/\\xC1rea de Trabalho/GIROTECH/Desafio/girot/App.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { Fragment, useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Notas from \"./scr/NotasM\";\nvar largura = Dimensions.get(\"screen\").width;\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      visible = _useState2[0],\n      setvisible = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      todo = _useState4[0],\n      settodo = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      quant = _useState6[0],\n      setquant = _useState6[1];\n\n  var textonome = \"\";\n  var descrição = \"\";\n  var prioridade = \"\";\n  var cont = 0;\n\n  var salvar = function salvar() {\n    cont = quant + 1;\n    setquant(cont);\n    var novaNota = {\n      nome: textonome,\n      texto: descrição,\n      prioridade: prioridade,\n      pos: quant\n    };\n    settodo([].concat(_toConsumableArray(todo), [novaNota]));\n    setvisible(false);\n  };\n\n  var modal = function modal() {\n    setvisible(true);\n  };\n\n  return React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, React.createElement(Modal, {\n    animationType: 'slide',\n    transparent: false,\n    visible: visible,\n    onRequestClose: function onRequestClose() {\n      setvisible(!visible);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \" Nova Nota \")), React.createElement(View, {\n    style: styles.elementos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, React.createElement(TextInput, {\n    onChangeText: function onChangeText(texto) {\n      return textonome = texto;\n    },\n    placeholder: \"nome da tarefa\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.elementos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, React.createElement(TextInput, {\n    onChangeText: function onChangeText(texto) {\n      return prioridade = texto;\n    },\n    placeholder: \"prioridade\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.elementos,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, React.createElement(TextInput, {\n    onChangeText: function onChangeText(texto) {\n      return descrição = texto;\n    },\n    placeholder: \"descrição\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: styles.mais,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: salvar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"Enviar\"))))), React.createElement(ScrollView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, \" Ol\\xE1 \")), React.createElement(FlatList, {\n    data: todo,\n    keyExtractor: function keyExtractor(item, index) {\n      return index.toString();\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(Fragment, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }\n      }, React.createElement(View, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }\n      }, React.createElement(Notas, {\n        nota: item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }\n      })));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: modal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }, React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    source: require(\"./assets/mais.png\"),\n    style: styles.mais,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  })))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  mais: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: largura / 5,\n    height: largura / 5,\n    margin: 100,\n    flexDirection: 'row'\n  },\n  user: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: largura / 5,\n    height: largura / 5,\n    margin: 100,\n    flexDirection: 'row'\n  },\n  elementos: {\n    flex: 1,\n    backgroundColor: '#87ceebff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 30,\n    margin: 30\n  }\n});","map":{"version":3,"sources":["/home/ovidio/Área de Trabalho/GIROTECH/Desafio/girot/App.js"],"names":["StatusBar","React","Fragment","useState","useEffect","useRef","PropTypes","Notas","largura","Dimensions","get","width","App","visible","setvisible","todo","settodo","quant","setquant","textonome","descrição","prioridade","cont","salvar","novaNota","nome","texto","pos","modal","styles","elementos","mais","user","item","index","toString","require","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent","height","margin","flexDirection","borderRadius"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React,{Fragment,useState, useEffect, useRef} from 'react';\nimport PropTypes from 'prop-types';\nimport {ScrollView, StyleSheet, Text, View,Image, Dimensions, FlatList,Modal,TouchableOpacity,TextInput } from 'react-native';\nimport Notas from './scr/NotasM';\n\nconst largura= Dimensions.get(\"screen\").width;\n\n\nexport default function App() {\n\n  const [visible,setvisible] = useState(false);\n  const [todo,settodo] =useState([]);\n\n  \n  const [quant,setquant] =useState(0);\n  \n  let textonome=\"\";\n  let descrição=\"\";\n  let prioridade= \"\";\n  let cont=0;\n\n  const salvar= ()=>{\n    cont=quant+1;\n    setquant(cont)\n    const novaNota={\n        nome: textonome,\n        texto:descrição,\n        prioridade:prioridade,\n        pos:quant,\n    }\n    settodo([...todo,novaNota]);\n    setvisible(false);\n}\n  const modal= ()=>{\n    setvisible(true);\n  }\n\n  return (\n    <Fragment>\n      <Fragment>\n      <Modal\n            animationType={'slide'}\n            transparent={false}\n            visible= {visible}\n            onRequestClose={() => {setvisible(!visible);\n            }}\n          >\n          <Fragment>\n            <Text> Nova Nota </Text>\n          </Fragment>\n          <View style={styles.elementos}>\n            <TextInput \n            onChangeText={texto => textonome = texto}\n            placeholder={\"nome da tarefa\"}/>\n          </View>\n          <View style={styles.elementos}>\n            <TextInput \n            onChangeText={texto => prioridade = texto}\n            placeholder={\"prioridade\"}/>\n          </View>  \n          <View style={styles.elementos}>\n            <TextInput \n            onChangeText={texto => descrição = texto}\n            placeholder={\"descrição\"}/>\n          </View> \n          <View style={styles.mais}>\n          <TouchableOpacity onPress={salvar}>\n            <Text>Enviar</Text>\n          </TouchableOpacity>   \n          </View> \n            </Modal>\n      </Fragment>\n        <ScrollView>\n          <View style={styles.user}>\n            <Text> Olá </Text>\n          </View>\n          <FlatList\n          data={todo}\n          keyExtractor={(item,index) => index.toString()}\n          renderItem = {({item}) =>\n              <Fragment>\n                <View>\n                    <Notas nota={item}/>\n                </View>\n              </Fragment>\n            }\n          />\n          <TouchableOpacity onPress={modal}>\n            <View>\n              <Image \n                      source={require(\"./assets/mais.png\")}\n                      style={styles.mais}\n                    />\n            </View>\n          </TouchableOpacity>\n        </ScrollView>\n      </Fragment>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  mais: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width:largura/5, \n    height:largura/5,\n    margin:100,\n    flexDirection: 'row',\n  },\n  user: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width:largura/5, \n    height:largura/5,\n    margin:100,\n    flexDirection: 'row',\n  },\n  elementos: {\n    flex: 1,\n    backgroundColor: '#87ceebff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 30,\n    margin:30,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}